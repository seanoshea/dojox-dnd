From 754ffdee25248238c7ae3e32a99e1a33cdc51b54 Mon Sep 17 00:00:00 2001
From: Sean O' Shea <oshea.ie@gmail.com>
Date: Sun, 31 Jan 2010 22:20:51 -0800
Subject: [PATCH 1/3] Adding BoundingBoxController

---
 .project                 |   11 ---------
 Selector.js              |   57 ++++++++++++++++++++++++++++++++++++++++++++++
 tests/test_selector.html |   14 ++++++++++-
 3 files changed, 70 insertions(+), 12 deletions(-)
 delete mode 100644 .project

diff --git a/.project b/.project
deleted file mode 100644
index ea1c791..0000000
--- a/.project
+++ /dev/null
@@ -1,11 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<projectDescription>
-	<name>dojox-dnd</name>
-	<comment></comment>
-	<projects>
-	</projects>
-	<buildSpec>
-	</buildSpec>
-	<natures>
-	</natures>
-</projectDescription>
diff --git a/Selector.js b/Selector.js
index 78c6dd9..288e999 100644
--- a/Selector.js
+++ b/Selector.js
@@ -24,6 +24,29 @@ dojo.declare(
 			}
 		},
 		
+		selectAll: function(args) {
+			// summary: selects all nodes
+			// args: Object: contains coordinate information for the bounding box. (optional)
+			// check to see whether this function is being invoked as a result of a bounding box.
+			if(args && args.endX != null && args.endY != null) {
+				// user has drawn a bounding box ... time to see whether any dom nodes
+				// in this container satisfy the bounding box range.
+				this.selectNone();
+				this.forInItems(function(data, id) {
+					var node = dojo.byId(id);
+					if(node && this._isBoundedByBox({coords: dojo.coords(node),
+											startX: args.startX, endX: args.endX,
+											startY: args.startY, endY: args.endY})) {
+						this._selectNode(id, true);
+					}
+				}, this);
+				return this._removeAnchor();
+			} else {
+				// just invoke the regular selectAll without bounding box arguments
+				return this.inherited(arguments);
+			}
+		},
+		
 		_selectNode: function(nodeId, shiftKey) {
 			// summary: selects a node based on nodeId
 			// nodeId: String: the id of the node to select
@@ -36,6 +59,40 @@ dojo.declare(
 			this._addItemClass(dojo.byId(nodeId), "Selected");
 			this.selection[nodeId] = 1;
 		},
+
+		_isBoundedByBox: function(args) {
+			// summary: figures out whether certain coodinates bound a particular dom node.
+			// args: contains dom node coordinates and coordinates for the
+			// positioning of the bounding box
+			var isBounded = false, tlx, tly, brx, bry;
+			var nodeTlx = args.coords.x, nodeTly = args.coords.y, nodeBrx = args.coords.x + args.coords.w, nodeBry = args.coords.y + args.coords.h;
+			// tlx, tly represents the x,y coordinates for the top left of the bounding box
+			// brx, bry represents the x,y coordinates for the bottom right of the bounding box
+			// nodeTlx, nodeTly represents the x,y coordinates for the top left of the dom node
+			// nodeBrx, nodeBry represents the x,y coordinates for the bottom right of the dom node
+			if(args.startX < args.endX) {
+				tlx = args.startX;
+				tly = args.startY;
+			} else {
+				tlx = args.endX;
+				tly = args.endY;
+			}
+			if(args.startY < args.endY) {
+				brx = args.endX;
+				bry = args.endY;
+			} else {
+				brx = args.startX;
+				bry = args.startY;
+				tlx = args.endX;
+				tly = args.endY;
+			}
+			var xBounded = (nodeTlx >= tlx || nodeBrx <= brx) && (tlx <= nodeBrx && brx >= nodeTlx) || (nodeTlx <= tlx && nodeBrx >= brx);
+			var yBounded = (tly <= nodeBry && bry >= nodeTly) || (nodeBry >= bry && nodeTly <= bry);
+			if(xBounded && yBounded) {
+				isBounded = true;
+			}
+			return isBounded;
+		},
 		
 		_getNodeId: function(nodeId, offset) {
 			// summary: selects a node based on nodeId
diff --git a/tests/test_selector.html b/tests/test_selector.html
index da10969..22ec00e 100644
--- a/tests/test_selector.html
+++ b/tests/test_selector.html
@@ -7,10 +7,20 @@
 			@import "../../../dojo/tests/dnd/dndDefault.css";
 			body { padding: 20px; }
 		</style>
+		<style title="text/css">
+			#boundingBox {
+				background:#999;
+				border:1px solid #2B2B2B;
+				opacity:0.6;
+				position:absolute;
+				z-index:19999;
+			}
+		</style>
 		<script type="text/javascript" src="../../../dojo/dojo.js" djConfig="isDebug: true"></script>
 		<script type="text/javascript">
 			dojo.require("dojox.dnd.Selector");
-			var albums;
+			dojo.require("dojox.dnd.BoundingBoxController");
+			var albums, bb;
 			var init = function() {
 				albums = new dojox.dnd.Selector(dojo.byId("albums"));
 				dojo.connect(dojo.doc, "onkeydown", dojo.hitch(this, function(evt) {
@@ -24,6 +34,7 @@
 						albums.shift(1, evt.shiftKey);
 					}
 				}));
+				bb = new dojox.dnd.BoundingBoxController({domNode: dojo.byId("boundingBox"), sources: [albums]});
 			};
 			dojo.addOnLoad(init);
 		</script>
@@ -36,5 +47,6 @@
 			<div id="highway" class="dojoDndItem">Highway 61 Revisited</div>
 			<div id="tracks" class="dojoDndItem">Blood on the Tracks</div>
 		</div>
+		<div id="boundingBox" style="display:none;"></div>
 	</body>
 </html>
\ No newline at end of file
-- 
1.6.5.1

